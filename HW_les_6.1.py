# Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков. Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
# В качестве задачи взята 9 задача из урока 1: Вводятся три разных числа. Найти, какое из них является средним (больше одного,
# но меньше другого)

# Не забудьте указать версию и разрядность вашей ОС и интерпретатора Python;
# Python 3.8.3
# 64-bit


from sys import getsizeof
from random import randint

# -------------------------------------------------------------------- 1 -------------------------------------------------------------------


print('Введите три различных целых числа')
a = int(input('Первое число: '))
b = int(input('Второе число: '))
c = int(input('Третье число: '))
if a < b < c or c < b < a:
    print(f'Среднее число: {b}')
elif a < c < b or b < c < a:
    print(f'Среднее число: {c}')
else:
    print(f'Среднее число: {a}')


def get_size_1(*args):
    summ = 0
    for i in args:
        summ += getsizeof(i)
    return f'Все использованные переменные и объекты занимают: {summ + getsizeof(summ)} байт'


print(get_size_1(a, b, c))

# ------------------------------------------------------------ 2 ---------------------------------------------------------------------------
print('=' * 100)

print('Введите три различных целых числа')
NUM = 3
CONST = 1
sequence = []
for i in range(NUM):
    sequence.append(int(input(f'{i + CONST} число: ')))


def get_size_2(*args):
    sum_ = getsizeof(min(sequence)) + getsizeof(max(sequence))
    for i in args:
        sum_ += getsizeof(i)
    for el in sequence:
        sum_ += getsizeof(el)
    return f'Все использованные переменные и объекты занимают: {sum_ + getsizeof(sum_)} байт'


sequence.remove(min(sequence)), sequence.remove(max(sequence))
print(f'Среднее число:', *sequence)
print(get_size_2(NUM, CONST, sequence))


# ------------------------------------------------------------ 3 ---------------------------------------------------------------------------
print('=' * 100)

print('Введите три различных целых числа')
NUM = 3
CONST = 1
my_dict = {i + CONST: int(input(f'Введите {i + CONST} число: ')) for i in range(NUM)}
print(my_dict)


def get_size_3(*args):
    sum_ = getsizeof(min(my_dict)) + getsizeof(max(my_dict))
    for i in args:
        sum_ += getsizeof(i)
    for el in my_dict:
        sum_ += getsizeof(el)
    return f'Все использованные переменные и объекты занимают: {sum_ + getsizeof(sum_)} байт'


print(get_size_3(NUM, CONST, my_dict))


for key, value in my_dict.items():
    if value != min(my_dict.values()) and value != max(my_dict.values()):
        print(f'Среднее число: {value}')

# Наиболее лёгким с точки зрения занятого пространства памяти является решение №1, т.к. в нём используются всего лишь 3 переменные для
# значений и 1 переменная для подсчёта суммы, оно простое и легко читаемое, однако наблюдается явное дублирование кода.
# Решение №2 с ипользованием списка тяжелее за счёт непосредственно использования списка, а также нескольких
# дополнительных переменнных, однако, мне кажется, что оно наиболее удачное, т.к. компактно и читабельно. Учитывая простоту решения и объём
# занимаемой памяти, считаю его оптимальным для данной задачи.
# Самым тяжелым является решение №3 с использованием словаря.
